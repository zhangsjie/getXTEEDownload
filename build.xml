<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="jar" name="getXTEEDownload">
	<property name="src" value="src" />
	<property name="bin" value="bin/" />
	<!--构造打包时Class-Path需要的路径 -->
	<!--pathconvert用于对目录进行组合 property即这个组合的名字，pathsep作用是各个文件之间的分隔符， 如果不写，在windows平台默认是分号。但时在MANIFEST.MF这个文件中，各个jar包之间要用空格区分， 
		因此。这里就写成空格了 -->
	<pathconvert property="lib" pathsep=" ">
		<!--mapper,对路径组合方式进行控制 -->
		<mapper>
			<!--chainedmapper 作用是联合多个mapper -->
			<chainedmapper>
				<!--过滤文件，将路径去掉，只保留文件名 -->
				<flattenmapper />
				<!--过滤+转换器，将所有的文件名前面都加上一个lib，我们知道lib目录下面有jar包， lib/*的作用其实是将jar包名与路径进行组合形成如：lib/google.jar这样的相对路径 -->
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</mapper>
		<!--按照mapper定义的格式组合lib目录下面的所有jar文件，形成诸如lib/jar1.jar lib/jar2.jar的字符串 -->
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</pathconvert>
	
	<!--组合各个路径，构成MANIFEST.MF文件中Class-Path所需的字符串-->  
    <property name="libs" value="${lib} " />  
  
    <!--打印一下刚才构造好的字符串，看看是否符合要求-->  
    <echo>libs   ${libs}</echo> 
	<!-- 构造打包时Class-Path需要的路径 结束-->  
	
	<path id="master-classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		<pathelement path="build" />
	</path>
	<target name="jar" depends="compile">
		<jar destfile="build/dist/getXteeApi.jar" basedir="build/"
			includes="src/**">
			<zipgroupfileset dir="lib/" includes="*.jar" />
			<fileset dir="bin/"></fileset>
			<manifest file="MANIFEST.MF">
				<attribute name="Main-Class" value="XTEEDownload.XTEE" />
			</manifest>
		</jar>
	</target>
	<target name="compile" depends="init1"
		description="Compile main source tree java files">
		<javac destdir="build/classes" srcdir="src" encoding="UTF-8" />
		<classpath refid="master-classpath" />
	</target>
	<target name="init1">
		<delete dir="build">
		</delete>
		<mkdir dir="build" />
		<mkdir dir="build/src" />
		<mkdir dir="build/classes" />
		<mkdir dir="build/dist" />
	</target>

	<target name="cleanup">
		<!-- 删除编译文件夹 -->
		<delete dir="${build.dir}/classes" />
	</target>


</project>
